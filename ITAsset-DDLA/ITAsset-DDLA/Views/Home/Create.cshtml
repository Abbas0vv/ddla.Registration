@model CreateProductViewModel

<h2>Register Product</h2>

<form asp-action="RegisterProduct" method="post" enctype="multipart/form-data">
    <div class="form-group">
        <label asp-for="StockProductId">Product</label>
        <select asp-for="StockProductId" asp-items="@ViewBag.StockProducts" class="form-control">
            <option value="">-- Select Product --</option>
        </select>
        <span asp-validation-for="StockProductId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="AvailableCount" class="control-label"></label>
        <input asp-for="AvailableCount" class="form-control" readonly />
    </div>

    <div class="form-group">
        <label asp-for="Count">Count to Register</label>
        <input asp-for="Count" class="form-control" />
        <span asp-validation-for="Count" class="text-danger"></span>
    </div>

    <!-- Other fields from your CreateProductViewModel -->

    <button type="submit" class="btn btn-primary">Register</button>
</form>

@section Scripts {
    <script>
        //Inventar <video controls="controls">
        document.addEventListener('DOMContentLoaded', function() {
                const inventarInput = document.getElementById('InventarId');
                const maxLength = 12;

                if (inventarInput) {
                    // Format on input change
                    inventarInput.addEventListener('input', function() {
                        // Remove spaces, trim, and convert to uppercase
                        let value = this.value.replace(/\s/g, '').trim().toUpperCase();

                        // Limit to maxLength characters
                        if (value.length > maxLength) {
                            value = value.substring(0, maxLength);
                        }

                        this.value = value;
                    });

                    // Format on blur (when field loses focus)
                    inventarInput.addEventListener('blur', function() {
                        this.value = this.value.replace(/\s/g, '').trim().toUpperCase();
                    });

                    // Format on paste
                    inventarInput.addEventListener('paste', function(e) {
                        // Wait for paste to complete
                        setTimeout(() => {
                            let value = this.value.replace(/\s/g, '').trim().toUpperCase();
                            if (value.length > maxLength) {
                                value = value.substring(0, maxLength);
                            }
                            this.value = value;
                        }, 0);
                    });

                    // Prevent spaces from being entered
                    inventarInput.addEventListener('keydown', function(e) {
                        if (e.key === ' ') {
                            e.preventDefault();
                        }
                    });
                }
            });
    </script>
}