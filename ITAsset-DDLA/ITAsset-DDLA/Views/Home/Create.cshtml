@using ITAsset_DDLA.Database.Models.DomainModels
@using ITAsset_DDLA.Database.Models.ViewModels.Shared
@using ITAsset_DDLA.Helpers.Enums
@using ddla.ITApplication.Database.Models.ViewModels.Product
@model DoubleCreateProductTypeViewModel

@{
    ViewData["Title"] = "Yeni məhsul qeydiyyatı";
}

<div class="main-content">
    <div class="container">
        <div class="registration-card">
            <h2 class="section-title">Yeni məhsul qeydiyyatı</h2>

            <form method="post" asp-action="Create" enctype="multipart/form-data" id="addForm">
                <div class="row">
                    <div class="col-md-6">
                        <!-- Recipient Section -->
                        <div class="mb-4">
                            <h5 class="mb-3">Məhsulu təhvil alan</h5>
                            <input asp-for="CreateProductViewModel.Recipient" class="form-control" placeholder="Ad soyad daxil edin" />
                            <span asp-validation-for="CreateProductViewModel.Recipient" class="error-message"></span>
                        </div>
                        <div class="mb-4">
                            <!-- Product Selection -->
                            <h5 class="mb-3">Məhsul</h5>
                            <select asp-for="CreateProductViewModel.StockProductIds" class="form-select" multiple size="12" style="min-height: 300px;">
                                @foreach (var product in Model.StockProducts)
                                {
                                    <option value="@product.Id">@product.Name (İnventar kod: @product.InventoryCode)</option>
                                }
                            </select>
                            <span asp-validation-for="CreateProductViewModel.StockProductIds" class="error-message"></span>

                        </div>
                    </div>

                    <div class="col-md-6">
                        <!-- Department -->
                        <div class="mb-4">
                            <h5 class="mb-3">Departament</h5>
                            <select asp-for="CreateProductViewModel.DepartmentName" class="form-select">
                                <option value="" disabled selected>Seçim edin</option>
                                @foreach (var department in Enum.GetValues(typeof(DepartmentName)))
                                {
                                    <option value="@department">@department</option>
                                }
                            </select>
                        </div>

                        <!-- Unit -->
                        <div class="mb-4">
                            <h5 class="mb-3">Şöbə</h5>
                            <select asp-for="CreateProductViewModel.UnitName" class="form-select">
                                <option value="" disabled selected>Seçim edin</option>
                                @foreach (var unit in Enum.GetValues(typeof(UnitName)))
                                {
                                    <option value="@unit">@unit</option>
                                }
                            </select>
                        </div>

                        <!-- Date -->
                        <div class="mb-4">
                            <h5 class="mb-3">Alınma tarixi</h5>
                            <input asp-for="CreateProductViewModel.DateofReceipt" class="form-control" type="date" />
                        </div>
                    </div>
                </div>
                <!-- File Upload -->
                <div class="mt-4">
                    <h5 class="mb-3">Fayl</h5>
                    <div class="file-upload-container">
                        <input asp-for="CreateProductViewModel.DocumentFile" type="file" id="fileUpload" class="d-none" />
                        <label for="fileUpload" class="btn btn-outline-primary">
                            <i class="fas fa-paperclip me-2"></i>Fayl seçin
                        </label>
                        <span id="fileName" class="ms-3">Heç bir fayl seçilməyib</span>
                    </div>
                    <small class="text-muted">İstənilən fayl tipi qəbul edilir (maksimum 5MB)</small>
                </div>

                <!-- Buttons -->
                <div class="d-flex justify-content-end mt-4">
                    <a asp-action="Index" class="btn btn-secondary me-2">
                        <i class="fas fa-times me-1"></i> Bağla
                    </a>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save me-1"></i> Yadda saxla
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
<script>
      document.addEventListener('DOMContentLoaded', function() {
        const stockProductSelect = document.getElementById('stockProductSelect');
        const inventoryContainer = document.getElementById('inventoryItemsContainer');
        const countInput = document.getElementById('CreateProductViewModel_Count');
        const selectedInventoryItems = document.getElementById('selectedInventoryItems');

        // Load inventory codes when product changes
        stockProductSelect.addEventListener('change', function() {
            const productId = this.value;

            if (!productId) {
                inventoryContainer.innerHTML = '<div class="text-muted">Zəhmət olmasa məhsul seçin</div>';
                return;
            }

            // Show loading
            inventoryContainer.innerHTML = '<div class="text-muted">Yüklənir...</div>';

            // Call server to get codes
            fetch('/YourControllerName/GetInventoryCodes?stockProductId=' + productId)
                .then(response => {
                    if (!response.ok) throw new Error('Network error');
                    return response.json();
                })
                .then(codes => {
                    if (codes.length === 0) {
                        inventoryContainer.innerHTML = '<div class="text-muted">Bu məhsul üçün inventar kodu tapılmadı</div>';
                        return;
                    }

                    inventoryContainer.innerHTML = '';
                    codes.forEach(code => {
                        const item = document.createElement('div');
                        item.className = 'inventory-item';
                        item.innerHTML = `
                            <input type="checkbox" id="inv_${code.Id}" value="${code.Id}" class="d-none">
                            <label for="inv_${code.Id}">${code.Code}</label>
                        `;
                        inventoryContainer.appendChild(item);
                    });

                    // Initialize selection handlers
                    initSelectionHandlers();
                })
                .catch(error => {
                    inventoryContainer.innerHTML = `<div class="text-danger">Xəta: ${error.message}</div>`;
                });
        });

        function initSelectionHandlers() {
            document.querySelectorAll('#inventoryItemsContainer .inventory-item label').forEach(label => {
                label.addEventListener('click', function() {
                    const checkbox = document.getElementById(this.htmlFor);
                    const requiredCount = parseInt(countInput.value) || 0;
                    const selectedCount = document.querySelectorAll('#inventoryItemsContainer input[type="checkbox"]:checked').length;

                    if (!checkbox.checked && selectedCount >= requiredCount) {
                        alert(`Maksimum ${requiredCount} inventar kodu seçə bilərsiniz`);
                        return;
                    }

                    checkbox.checked = !checkbox.checked;
                    this.closest('.inventory-item').classList.toggle('selected', checkbox.checked);
                    updateSelection();
                });
            });
        }

        function updateSelection() {
            const requiredCount = parseInt(countInput.value) || 0;
            const selectedCount = document.querySelectorAll('#inventoryItemsContainer input[type="checkbox"]:checked').length;

            document.getElementById('selectedCount').textContent = selectedCount;
            document.getElementById('requiredCount').textContent = requiredCount;
            document.getElementById('selectionError').classList.toggle('d-none', selectedCount === requiredCount);

            // Update hidden select
            selectedInventoryItems.innerHTML = '';
            document.querySelectorAll('#inventoryItemsContainer input[type="checkbox"]:checked').forEach(checkbox => {
                const option = document.createElement('option');
                option.value = checkbox.value;
                option.selected = true;
                selectedInventoryItems.appendChild(option);
            });
        }

        countInput.addEventListener('input', updateSelection);
    });
</script>
