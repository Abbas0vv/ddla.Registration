@using ITAsset_DDLA.Helpers.Enums
@using ddla.ITApplication.Database
@using ddla.ITApplication.Helpers

@model List<Product>

<div class="main-content">
    <div class="container mt-5">
        <div class="logo-header">
            <img src="~/assets/images/ddlaLogo.png" alt="DDLA Logo" class="img-fluid">
            <div class="logo-text">
                <h1>IT Qeydiyyat Sistemi</h1>
                <small>Dövlət Dəniz və Liman Agentliyi</small>
            </div>
        </div>

        <!-- Add this new button section - Replace the existing button section with this -->
        <div class="mb-3 text-end">
            <a asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus"></i> Yeni Təhvil-Təslim yarat
            </a>
            <a asp-action="CreateBlank" class="btn btn-success ml-2">
                <i class="fas fa-file-alt"></i> Yeni Blank yarat
            </a>
        </div>

        <div class="mb-3">
            <input type="text" id="globalSearch" class="form-control" placeholder="Ümumi axtarış...">
        </div>

        <div class="table-responsive">
            <table class="table table-striped table-bordered" id="productsTable">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>İmzalanıb</th>
                        <th>İnventar ID</th>
                        <th>İstifadəçi adı</th>
                        <th>Məhsul adı</th>
                        <th>Təsvir</th>
                        <th>Departament</th>
                        <th>Şöbə</th>
                        <th>Verilmə tarixi</th>
                        <th>Alınma tarixi</th>
                        <th>Fayl</th>
                        <th>Əməliyyatlar</th>
                    </tr>
                    <tr class="column-filters">
                        <th></th> <!-- # -->
                        <th>
                            <select class="form-control form-control-sm" data-column="1">
                                <option value="">Hamısı</option>
                                <option value="Təsdiqlənib">Təsdiqlənib</option>
                                <option value="Təsdiqlənməyib">Təsdiqlənməyib</option>
                            </select>
                        </th>
                        <th><input type="text" class="form-control form-control-sm" placeholder="Axtar..." data-column="2"></th>
                        <th><input type="text" class="form-control form-control-sm" placeholder="Axtar..." data-column="3"></th>
                        <th><input type="text" class="form-control form-control-sm" placeholder="Axtar..." data-column="4"></th>
                        <th><input type="text" class="form-control form-control-sm" placeholder="Axtar..." data-column="5"></th>
                        <th>
                            <select class="form-control form-control-sm" data-column="6">
                                <option value="">Hamısı</option>
                                @foreach (var department in Enum.GetValues(typeof(DepartmentName)))
                                {
                                    <option value="@department">@department</option>
                                }
                            </select>
                        </th>
                        <th>
                            <select class="form-control form-control-sm" data-column="7">
                                <option value="">Hamısı</option>
                                @foreach (var unit in Enum.GetValues(typeof(UnitName)))
                                {
                                    <option value="@unit">@unit</option>
                                }
                            </select>
                        </th>
                        <th><input type="date" class="form-control form-control-sm" data-column="8"></th>
                        <th><input type="date" class="form-control form-control-sm" data-column="9"></th>
                        <th></th> <!-- Fayl -->
                        <th></th> <!-- Əməliyyatlar -->
                    </tr>
                </thead>
                <tbody>
                    @{
                        int counter = 1;
                        foreach (var item in Model)
                        {
                            <tr>
                                <td>@counter</td>
                                <td data-order="@item.IsSigned.ToString().ToLower()">
                                    <span class="d-none">@((item.IsSigned ? "Təsdiqlənib" : "Təsdiqlənməyib"))</span>
                                    @if (item.IsSigned)
                                    {
                                        <i class="fas fa-check-circle text-success" title="Təsdiqlənib"></i>
                                    }
                                    else
                                    {
                                        <i class="fas fa-times-circle text-danger" title="Təsdiqlənməyib"></i>
                                    }
                                </td>

                                <td>@item.InventarId</td>
                                <td>@item.Recipient</td>
                                <td>@item.Name</td>
                                <td>@item.Description</td>
                                <td>
                                    <span class="badge badge-department" style="background-color:#005b96">@item.Department.ToString()</span>
                                </td>
                                <td>
                                    <span class="badge badge-department" style="background-color:#005b96">@item.Unit.ToString()</span>
                                </td>
                                <td data-order="@item.DateofIssue.ToString("yyyy-MM-dd HH:mm")">
                                    <span class="d-none">@item.DateofIssue.ToString("dd.MM.yyyy")</span>
                                    @item.DateofIssue.ToString("dd.MM.yyyy HH:mm")
                                </td>
                                <td data-order="@(item.DateofReceipt?.ToString("yyyy-MM-dd HH:mm") ?? "")">
                                    @if (item.DateofReceipt.HasValue)
                                    {
                                        <span class="d-none">@item.DateofReceipt.Value.ToString("dd.MM.yyyy")</span>
                                        @item.DateofReceipt.Value.ToString("dd.MM.yyyy HH:mm")
                                    }
                                    else
                                    {
                                        <span class="d-none">Təhvil alınmayıb</span>
                                        <span>Təhvil alınmayıb</span>
                                    }
                                </td>

                                <td>
                                    @if (!string.IsNullOrEmpty(item.FilePath))
                                    {
                                        <a href="@item.FilePath"
                                           class="btn btn-sm @(item.IsSigned ? "btn-success" : "btn-outline-danger")"
                                           download
                                           onclick="downloadAndRefresh(event, this)">
                                            <i class="fas fa-download"></i>
                                        </a>
                                    }
                                    else
                                    {
                                        <a href="@Url.Action("GenerateHandoverPdf", "Home", new { id = item.Id })"
                                           class="btn btn-sm @(item.IsSigned ? "btn-success" : "btn-outline-danger")"
                                           download
                                           onclick="downloadAndRefresh(event, this)">
                                            <i class="fas fa-download"></i>
                                        </a>
                                    }
                                </td>
                                <td>
                                    <a asp-action="Update" asp-route-id="@item.Id" class="btn btn-warning btn-sm">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">
                                        <i class="fas fa-trash"></i>
                                    </a>
                                </td>
                            </tr>
                            counter++;
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.10.0/js/bootstrap-datepicker.min.js"></script>

<script>
     $(document).ready(function() {
        // Initialize DataTable without ordering, info, paging
        const table = $('#productsTable').DataTable({
            dom: 't',           // sadəcə table göstər
            ordering: false,    // sütun başlıqlarına kliklə sıralama olmayacaq
            info: false,        // "1-8 arası" kimi info göstərməyəcək
            language: { url: '//cdn.datatables.net/plug-ins/1.13.6/i18n/az-AZ.json' }
        });

        // Global search
        $('#globalSearch').on('keyup', function() {
            table.search(this.value).draw();
        });

        // Boolean column filter
        $('#productsTable thead select[data-column="1"]').on('change', function() {
            const val = $(this).val();
            table.column(1).search(val).draw();
        });

        // Text input filters
        $('#productsTable thead input').on('keyup change', function() {
            const colIndex = $(this).data('column');
            table.column(colIndex).search(this.value).draw();
        });

        // Datepicker
        $('.datepicker').datepicker({
            format: 'dd.mm.yyyy',
            autoclose: true
        }).on('changeDate', function(e) {
            table.draw();
        });

            $('#productsTable thead select[data-column="6"]').on('change', function() {
        const val = $(this).val();
        table.column(6).search(val ? "^" + val + "$" : "", true, false).draw();
    });

    $('#productsTable thead select[data-column="7"]').on('change', function() {
        const val = $(this).val();
        table.column(7).search(val ? "^" + val + "$" : "", true, false).draw();
    });


        // Custom date filter
        $.fn.dataTable.ext.search.push(function(settings, data, dataIndex) {
            // Verilmə tarixi
            const dateIssueFilter = $('input[data-column="8"]').val();
            const dateIssueStr = $(table.row(dataIndex).node()).find('td').eq(8).find('span.d-none').text();
            if (dateIssueFilter) {
                const partsFilter = dateIssueFilter.split('.');
                const partsCell = dateIssueStr.split('.');
                const filterDate = new Date(partsFilter[2], partsFilter[1]-1, partsFilter[0]);
                const cellDate = new Date(partsCell[2], partsCell[1]-1, partsCell[0]);
                if (cellDate.getTime() !== filterDate.getTime()) return false;
            }

            // Alınma tarixi
            const dateReceiptFilter = $('input[data-column="9"]').val();
            const dateReceiptStr = $(table.row(dataIndex).node()).find('td').eq(9).find('span.d-none').text();
            if (dateReceiptFilter) {
                const partsFilter = dateReceiptFilter.split('.');
                const partsCell = dateReceiptStr.split('.');
                const filterDate = new Date(partsFilter[2], partsFilter[1]-1, partsFilter[0]);
                const cellDate = new Date(partsCell[2], partsCell[1]-1, partsCell[0]);
                if (cellDate.getTime() !== filterDate.getTime()) return false;
            }

            return true;
        });
    });

</script>

