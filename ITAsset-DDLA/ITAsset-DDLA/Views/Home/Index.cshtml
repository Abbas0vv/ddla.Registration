@using ITAsset_DDLA.Helpers.Enums
@using ddla.ITApplication.Database
@using ddla.ITApplication.Helpers

@model List<Product>

<div class="main-content">
    <div class="container mt-5">
        <div class="logo-header">
            <img src="~/assets/images/ddlaLogo.png" alt="DDLA Logo" class="img-fluid">
            <div class="logo-text">
                <h1>IT Qeydiyyat Sistemi</h1>
                <small>Dövlət Dəniz və Liman Agentliyi</small>
            </div>
        </div>

        <!-- Add this new button section -->
        <div class="mb-3 text-end">
            <a asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus"></i> Yeni Təhvil-Təslim yarat
            </a>
        </div>

        <div class="mb-3">
            <input type="text" id="globalSearch" class="form-control" placeholder="Ümumi axtarış...">
        </div>

        <div class="table-responsive">
            <table class="table table-striped table-bordered" id="productsTable">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>İnventar ID</th>
                        <th>İstifadəçi adı</th>
                        <th>Məhsul adı</th>
                        <th>Təsvir</th>
                        <th>Departament</th>
                        <th>Şöbə</th>
                        <th>Sayı</th>
                        <th>Verilmə tarixi</th>
                        <th>Alınma tarixi</th>
                        <th>Fayl</th>
                        <th>Əməliyyatlar</th>
                    </tr>
                    <tr class="column-filters">
                        <th></th> <!-- # -->
                        <th><input type="text" class="form-control form-control-sm" placeholder="Axtar..." data-column="1"></th>
                        <th><input type="text" class="form-control form-control-sm" placeholder="Axtar..." data-column="2"></th>
                        <th><input type="text" class="form-control form-control-sm" placeholder="Axtar..." data-column="3"></th>
                        <th><input type="text" class="form-control form-control-sm" placeholder="Axtar..." data-column="4"></th>
                        <th>
                            <select class="form-control form-control-sm" data-column="5">
                                <option value="">Hamısı</option>
                                @foreach (var department in Enum.GetValues(typeof(DepartmentName)))
                                {
                                    <option value="@department">@department</option>
                                }
                            </select>
                        </th>
                        <th>
                            <select class="form-control form-control-sm" data-column="6">
                                <option value="">Hamısı</option>
                                @foreach (var unit in Enum.GetValues(typeof(UnitName)))
                                {
                                    <option value="@unit">@unit</option>
                                }
                            </select>
                        </th>
                        <th><input type="number" class="form-control form-control-sm" placeholder="Axtar..." data-column="7"></th>
                        <th><input type="text" class="form-control form-control-sm datepicker" placeholder="dd.mm.yyyy" data-column="8"></th>
                        <th><input type="text" class="form-control form-control-sm datepicker" placeholder="dd.mm.yyyy" data-column="9"></th>
                        <th></th> <!-- Fayl -->
                        <th></th> <!-- Əməliyyatlar -->
                    </tr>
                </thead>
                <tbody>
                    @{
                        int counter = 1;
                        foreach (var item in Model)
                        {
                            <tr>
                                <td>@counter</td>
                                <td>@item.InventarId</td>
                                <td>@item.Recipient</td>
                                <td>@item.Name</td>
                                <td>@item.Description</td>
                                <td>
                                    <span class="badge badge-department" style="background-color:#005b96">@item.Department.ToString()</span>
                                </td>
                                <td>
                                    <span class="badge badge-department" style="background-color:#005b96">@item.Unit.ToString()</span>
                                </td>
                                <td>@ViewBag.AviableCount</td>
                                <td data-order="@item.DateofIssue.ToString("yyyy-MM-dd HH:mm")">@item.DateofIssue.ToString("dd.MM.yyyy HH:mm")</td>
                                <td data-order="@(item.DateofReceipt?.ToString("yyyy-MM-dd HH:mm") ?? "")">
                                    @if (item.DateofReceipt.HasValue)
                                    {
                                        @item.DateofReceipt.Value.ToString("dd.MM.yyyy HH:mm")
                                    }
                                    else
                                    {
                                        <span>Təhvil alınmayıb</span>
                                    }
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(item.FilePath))
                                    {
                                        <a href="@item.FilePath" class="btn btn-sm btn-outline-primary" download>
                                            <i class="fas fa-download"></i>
                                        </a>
                                    }
                                </td>
                                <td>
                                    @if (User.IsInRole("Admin"))
                                    {
                                        <a asp-action="Update" asp-route-id="@item.Id" class="btn btn-warning btn-sm">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">
                                            <i class="fas fa-trash"></i>
                                        </a>
                                    }
                                    else
                                    {
                                        <button class="btn btn-warning btn-sm" disabled>
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        <button class="btn btn-danger btn-sm" disabled>
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    }
                                </td>
                            </tr>
                            counter++;
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function() {
        // Initialize global search
        $('#globalSearch').on('keyup', function() {
            const searchText = $(this).val().toLowerCase();
            $('#productsTable tbody tr').filter(function() {
                $(this).toggle($(this).text().toLowerCase().indexOf(searchText) > -1);
            });
        });

        // Initialize column search
        $('.column-filters input, .column-filters select').on('keyup change', function() {
            const columnIndex = $(this).data('column');
            const searchValue = $(this).val().toLowerCase();

            $('#productsTable tbody tr').each(function() {
                const cell = $(this).find('td').eq(columnIndex);
                if (cell.length) {
                    const cellText = cell.text().toLowerCase();
                    const cellData = cell.data('order') || cellText;

                    if (searchValue === '' || cellData.toString().toLowerCase().indexOf(searchValue) > -1) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                }
            });
        });

        // Datepicker for date columns
        $('.datepicker').on('focus', function() {
            $(this).attr('type', 'date');
        }).on('blur', function() {
            if (!$(this).val()) {
                $(this).attr('type', 'text');
            }
        });
    });
</script>
